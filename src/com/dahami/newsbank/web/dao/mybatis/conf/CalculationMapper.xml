<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="calculation">
   	<!-- 정산승인 -->
   	<insert id="insertCalculation" useGeneratedKeys="true" keyProperty="calculation_seq">
   	    INSERT INTO `calculations` (
		regDate   	    
   	    <if test="id != null">, id</if>
   	    <if test="uciCode != null">, uciCode</if>
   	    <if test="type != null">, type</if>
   	    <if test="price != null">, price</if>
   	    <if test="fees != null">, fees</if>
   	    <if test="status != null">, status</if>
   	    `id`, `uciCode`, `usage`, `type`, `price`, `fees`, `status`) 
		VALUES (#{id}, #{uciCode}, #{usage}, #{type}, #{price}, #{fees}, #{status})
		<if test="id != null">, #{id}</if>
		<if test="uciCode != null">, #{uciCode}</if>
		<if test="type != null">, #{type}</if>
		<if test="price != null">, #{price}</if>
		<if test="fees != null">, #{fees}</if>
		<if test="status != null">, #{status}</if>
		
		<selectKey resultType="int" keyProperty="calculation_seq">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
   	</insert>
   	
   	<!-- 정산매체, 피정산매체 선택에 따른 정산결과 -->
   	<select id="selectCalculation" resultType="com.dahami.newsbank.web.dto.CalculationDTO" 
   	    parameterType="com.dahami.newsbank.web.dto.CalculationDTO"> 
   	   SELECT C.seq, C.id, M.name, M.compName, SM.name as copyright, P.member_seq, C.`payType`,  
   	   C.`uciCode`, C.`usage`, C.`type`, C.`price`, C.`status`, C.`fees`, C.`regDate`
		FROM calculations C
		INNER JOIN member M ON C.id = M.id
		INNER JOIN photo P ON C.uciCode = P.uciCode
		INNER JOIN member SM ON P.member_seq = SM.seq
		
		<where>
		    <if test="member_seqArr != null and member_seqArr.length != 0">
		        <foreach item="slaveSeq" collection="member_seqArr" index="idx" open="(" separator="OR" close=")">
		            P.member_seq = #{slaveSeq} 
		        </foreach>
		    </if>
		    <if test="paytype != null and paytype != 'all'">
		    	AND C.`payType` = #{paytype}    
		    </if>		    
		    <if test="start_date != null and end_date != null">
		    	AND date_format(C.`regDate`, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}     
		    </if>
		    <if test="keyword != null">
	            <bind name="keyword" value="'%' + keyword + '%'" />
	            AND (M.`name` LIKE #{keyword} OR M.`compName` LIKE #{keyword} OR M.`id` LIKE #{keyword})
            </if>
	    </where>
		
   	</select>
   	
   	<!-- 월별 정산통계 Result -->
	<resultMap id="calculationResult" type="java.util.HashMap">
		<result javaType="java.lang.String" column="YearOfMonth" property="YearOfMonth"></result>
		<result javaType="java.lang.Integer" column="price" property="price"></result>
		<result javaType="java.lang.Integer" column="type" property="type"></result>
		<result javaType="java.lang.Integer" column="count" property="count"></result>
	</resultMap>
   	
   	<!-- 정산/피정산 전체매체를 대상으로 온/오프라인 월별 통계 -->
   	<select id="selectOfMonth" resultMap="calculationResult">
   	    SELECT DATE_FORMAT(c.regDate, '%Y-%m') AS YearOfMonth, SUM(price) AS price, c.`type`, COUNT(price) AS count
		FROM calculations c
		INNER JOIN photo p ON c.uciCode = p.uciCode
		INNER JOIN member m on c.id = m.id
		<where>
		    <if test="member_seqArr != null and member_seqArr.length != 0">
		        <foreach item="slaveSeq" collection="member_seqArr" index="idx" open="(" separator="OR" close=")">
		            p.member_seq = #{slaveSeq} 
		        </foreach>
		    </if>
		    <if test="start_date != null and end_date != null">
		        AND DATE_FORMAT(c.regDate, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}
	        </if>		    
	        <if test="paytype != null and paytype != 'all'">
	            AND c.payType = #{paytype}
	        </if>
	        <if test="keyword != null">
	            <bind name="keyword" value="'%' + keyword + '%'" />
	            AND (m.`name` LIKE #{keyword} OR m.`compName` LIKE #{keyword} OR m.`id` LIKE #{keyword})
	        </if>
		</where>
		GROUP BY DATE_FORMAT(c.regDate, '%Y-%m'), `type`
		ORDER BY DATE_FORMAT(c.regDate, '%Y-%m')
   	</select>
</mapper>
    
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="calculation">
   	<!-- 정산승인 -->
   	<insert id="insertCalculation" parameterType="com.dahami.newsbank.web.dto.CalculationDTO" 
   	    useGeneratedKeys="true" keyProperty="seq">
   	    INSERT INTO `calculations` (
   	    <if test="id != null">`id`</if>
   	    <if test="uciCode != null">, `uciCode`</if>
   	    <if test="usage != null">, `usage`</if>
   	    <if test="type != null">, `type`</if>
   	    <if test="payType != null">, `payType`</if>
   	    <if test="price != null">, `price`</if>
   	    <if test="fees != null">, `fees`</if>
   	    <if test="rate >0">, `rate`</if>
   	    <if test="status != null">, `status`</if>
   	    <if test="regDate != null">, `regDate`</if>   	     
		) VALUES (
		<if test="id != null">#{id}</if>
		<if test="uciCode != null">, #{uciCode}</if>
		<if test="usage != null">, #{usage}</if>
		<if test="type != null">, #{type}</if>
		<if test="payType != null">, #{payType}</if>
		<if test="price != null">, #{price}</if>
		<if test="fees != null">, #{fees}</if>
		<if test="rate >0">, #{rate}</if>
		<if test="status != null">, #{status}</if>
		<if test="regDate != null">, #{regDate}</if>
		)
		
		<selectKey resultType="int" keyProperty="seq">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
   	</insert>
   	
   	<!-- 정산/피정산 상세내역 Result -->
   	<resultMap id="calculationResult" type="com.dahami.newsbank.web.dto.CalculationDTO">
		<id property="seq" column="seq" />
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="compName" column="compName" />
		<result property="copyright" column="copyright" />
		<result property="member_seq" column="member_seq" />
		<result property="payType" column="payType" />
		<result property="uciCode" column="uciCode" />
		<result property="shotDate" column="shotDate" />
		<result property="usage" column="usage" />
		<result property="type" column="type" />
		<result property="price" column="price" />
		<result property="status" column="status" />
		<result property="fees" column="fees" />
		<result property="rate" column="rate" />
		<result property="regDate" column="regDate" />
		
		<association property="memberDTO" column="seq"
			javaType="com.dahami.newsbank.web.dto.MemberDTO" resultMap="memberResult" />
		<association property="usageDTO" column="usage"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />
	</resultMap>
	
   	<resultMap id="memberResult" type="com.dahami.newsbank.web.dto.MemberDTO">
		<id property="seq" column="seq" />
		<result property="type" column="type" />
		<result property="id" column="id" />
		<result property="admission" column="admission" />
		<result property="withdraw" column="withdraw" />
		<result property="activate" column="activate" />
		<result property="compName" column="compName" />
		<result property="compAddress" column="compAddress" />
	</resultMap>
	
   	<resultMap id="usageResult" type="com.dahami.newsbank.web.dto.UsageDTO">
 	    <id property="usageList_seq" column="usageList_seq" />
		<result property="usage" column="usageName" />
		<result property="division1" column="division1" />
		<result property="division2" column="division2" />
		<result property="division3" column="division3" />
		<result property="division4" column="division4" />
		<result property="usageDate" column="usageDate" />
		<result property="price" column="price" />
 	</resultMap>
   	
   	<!-- 정산매체, 피정산매체 선택에 따른 정산결과 -->
	<select id="selectCalculation" resultMap="calculationResult" 
   	    parameterType="com.dahami.newsbank.web.dto.CalculationDTO"> 
   	   SELECT C.seq, C.id, M.name, M.compName, SM.compName as copyright, P.member_seq, C.`payType`,  
   	   C.`uciCode`, P.`shotDate`, C.`usage`, C.`type`, C.`price`, C.`status`, C.`fees`, C.`rate`, C.`regDate`,
   	   U.`usage` AS usageName, U.division1, U.division2, U.division3, U.division4, U.price,
   	   SM.seq, SM.`type`, SM.id, SM.admission, SM.withdraw, SM.activate, SM.compName
		FROM calculations C
		LEFT JOIN member M ON C.id = M.id
		LEFT JOIN usageList U ON C.`usage` =  U.seq
		LEFT JOIN photo P ON C.uciCode = P.uciCode
		LEFT JOIN member SM ON P.member_seq = SM.seq
		
		<where>
		    <if test="member_seqArr != null and member_seqArr.length != 0">
		        <foreach item="slaveSeq" collection="member_seqArr" index="idx" open="(" separator="OR" close=")">
		            <if test="slaveSeq != null and slaveSeq != 'all'"> 
		            	P.member_seq = #{slaveSeq} 
		            </if>
		        </foreach>
		    </if>
		    <if test="payType != null and payType != 'all'">
		    	AND C.`payType` = #{payType}    
		    </if>		    
		    <if test="start_date != null and end_date != null">
		    	AND date_format(C.`regDate`, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}     
		    </if>
		    <if test="keyword != null and keyword != ''">
		    	<if test="keywordType == 'member'"> <!-- 회사/기관명, 아이디, 이름 -->
				 AND M.id LIKE CONCAT('%', #{keyword}, '%')
				     OR M.name LIKE CONCAT('%', #{keyword}, '%')
				     OR M.compName LIKE CONCAT('%', #{keyword}, '%')
				</if>
				<if test="keywordType == 'photo'"> <!-- UCI코드, 언론사 사진번호 -->
				 AND P.uciCode LIKE CONCAT('%', #{keyword}, '%')
				    OR (SELECT compCode FROM photo WHERE uciCode = C.uciCode) LIKE CONCAT('%', #{keyword}, '%')
				</if>
	            <bind name="keyword" value="'%' + keyword + '%'" />
	            AND (M.`name` LIKE #{keyword} OR M.`compName` LIKE #{keyword} OR M.`id` LIKE #{keyword})
            </if>
	    </where>
		
   	</select>
   	
   	<!-- 월별 정산통계 Result -->
	<resultMap id="calculationMonthResult" type="java.util.HashMap">
		<result javaType="java.lang.String" column="YearOfMonth" property="YearOfMonth"></result>
		<result javaType="java.lang.Integer" column="price" property="price"></result>
		<result javaType="java.lang.Integer" column="type" property="type"></result>
		<result javaType="java.lang.Integer" column="count" property="count"></result>
		<result javaType="java.lang.Double" column="rate" property="rate"></result>
		<result javaType="java.lang.String" column="payType" property="payType"></result>
		<result javaType="java.lang.Integer" column="fees" property="fees"></result>
	</resultMap>
   	
   	<!-- 정산/피정산 전체매체를 대상으로 온/오프라인 월별 통계 -->
   	<select id="selectOfMonth" resultMap="calculationMonthResult">
   	    SELECT DATE_FORMAT(c.regDate, '%Y-%m') AS YearOfMonth, SUM(price) AS price, c.`type`, COUNT(price) AS count
		FROM calculations c
		INNER JOIN photo p ON c.uciCode = p.uciCode
		INNER JOIN member m on c.id = m.id
		<where>
		    <if test="member_seqArr != null and member_seqArr.length != 0">
		        <foreach item="slaveSeq" collection="member_seqArr" index="idx" open="(" separator="OR" close=")">
		            p.member_seq = #{slaveSeq} 
		        </foreach>
		    </if>
		    <if test="start_date != null and end_date != null">
		        AND DATE_FORMAT(c.regDate, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}
	        </if>		    
	        <if test="payType != null and payType != 'all'">
	            AND c.payType = #{payType}
	        </if>
	        <if test="keyword != null and keyword != ''">
		        <if test="keywordType == 'member'"> <!-- 회사/기관명, 아이디, 이름 -->
				 AND (
				 	 m.id LIKE CONCAT('%', #{keyword}, '%')
			    	 OR m.name LIKE CONCAT('%', #{keyword}, '%')
				     OR m.compName LIKE CONCAT('%', #{keyword}, '%')
				    )
				</if>
				<if test="keywordType == 'photo'"> <!-- UCI코드, 언론사 사진번호 -->
				 AND(
				 	 p.uciCode LIKE CONCAT('%', #{keyword}, '%')
				    OR (SELECT compCode FROM photo WHERE uciCode = c.uciCode) LIKE CONCAT('%', #{keyword}, '%')
				    )
				</if>
	        </if>
		</where>
		GROUP BY DATE_FORMAT(c.regDate, '%Y-%m'), `type`
		ORDER BY DATE_FORMAT(c.regDate, '%Y-%m')
   	</select>
   	
   	<!-- 월별 정산통계 Result -->
	<resultMap id="calculationDetailResult" type="java.util.HashMap">
	    <result javaType="java.lang.Integer" column="seq" property="seq"></result>
		<result javaType="java.lang.String" column="id" property="id"></result>
		<result javaType="java.lang.String" column="name" property="name"></result>
		<result javaType="java.lang.String" column="compName" property="compName"></result>
		<result javaType="java.lang.String" column="copyright" property="copyright"></result>
		<result javaType="java.lang.String" column="LGD_PAYTYPE" property="LGD_PAYTYPE"></result>
		<result javaType="java.lang.String" column="uciCode" property="uciCode"></result>
		<result javaType="java.lang.String" column="usage" property="usage"></result>
		<result javaType="java.lang.String" column="type" property="type"></result>
		<result javaType="java.lang.Integer" column="price" property="price"></result>
		<result javaType="java.lang.String" column="status" property="status"></result>
		<result javaType="java.lang.Integer" column="fees" property="fees"></result>
		<result javaType="java.lang.Integer" column="rate" property="rate"></result>
		<result javaType="java.lang.String" column="LGD_PAYDATE" property="LGD_PAYDATE"></result>
		<result javaType="java.lang.String" column="LGD_BUYER" property="LGD_BUYER"></result>
		<result javaType="java.lang.String" column="usageName" property="usageName"></result>		
		<result javaType="java.lang.String" column="compCode" property="compCode"></result>
		<result javaType="java.lang.String" column="shotDate" property="shotDate"></result>
		<result javaType="java.lang.String" column="descriptionKr" property="descriptionKr"></result>
	</resultMap>
   	
   	<select id="monthlyStats" resultMap="calculationMonthResult" parameterType="java.util.HashMap">
   	    SELECT DATE_FORMAT(c.regDate, '%Y-%m') AS YearOfMonth, c.price, c.`type`, c.rate, c.payType, c.fees
		FROM calculations c
		INNER JOIN photo p ON c.uciCode = p.uciCode
		INNER JOIN member m on c.id = m.id
		<where>
		    <if test="media != null">
			    <foreach item="slaveSeq" collection="media" index="idx" open="(" separator="OR" close=")">
		            p.member_seq = #{slaveSeq} 
		        </foreach>
	        </if>
		    <if test="start_date != null and end_date != null">
		        AND DATE_FORMAT(c.regDate, '%Y%m%d') BETWEEN #{start_date} AND #{end_date}
	        </if>		    
	        <if test="paytype != null and paytype != 'all'">
	            AND c.payType = #{paytype}
	        </if>
	        <if test="keyword != null and keyword != ''">
			 AND (
			 	 m.id LIKE CONCAT('%', #{keyword}, '%')
		    	 OR m.name LIKE CONCAT('%', #{keyword}, '%')
			     OR m.compName LIKE CONCAT('%', #{keyword}, '%')
			    )
	        </if>
		</where>		
		ORDER BY DATE_FORMAT(c.regDate, '%Y-%m')
   	</select>
   	
   	<!-- 정산 내역 상세내역 (마이페이지) -->
   	<select id="statsList" resultMap="calculationDetailResult" parameterType="java.util.HashMap"> 
   	   SELECT C.seq, C.id AS LGD_BUYERID, M.name AS LGD_BUYER, M.compName AS LGD_BUYER_COMPNAME, SM.name as copyright, P.member_seq, C.`payType` AS LGD_PAYTYPE,  
   	   C.`uciCode` AS photo_uciCode, C.`usage`, C.`type`, C.`price`, C.`status`, C.`fees`, C.`rate`, DATE_FORMAT(C.`regDate`, '%Y%m%d') AS LGD_PAYDATE,
   	   CONCAT_WS(' - ', U.`usage`, U.division1, U.division2, U.division3, U.division4) AS usageName, U.price, P.compCode, P.shotDate, P.descriptionKr,
   	   <!-- U.`usage` AS usageName, U.division1, U.division2, U.division3, U.division4, U.price, -->
   	   SM.seq, SM.`type`, SM.id, SM.admission, SM.withdraw, SM.activate, SM.compName
		FROM calculations C
		LEFT JOIN member M ON C.id = M.id
		LEFT JOIN usageList U ON C.`usage` =  U.seq
		LEFT JOIN photo P ON C.uciCode = P.uciCode
		LEFT JOIN member SM ON P.member_seq = SM.seq
		
		<where>
		    <if test="media != null">
			    <foreach item="slaveSeq" collection="media" index="idx" open="(" separator="OR" close=")">
		            P.member_seq = #{slaveSeq} 
		        </foreach>
	        </if>
		    <if test="paytype != null">
		    	AND C.`payType` = #{paytype}    
		    </if>		    
		    <if test="start_date != null and end_date != null">
		    	AND DATE_FORMAT(C.regDate, '%Y%m%d') BETWEEN #{start_date} AND #{end_date}     
		    </if>
		    <if test="keyword != null and keyword != ''">
	            <bind name="keyword" value="'%' + keyword + '%'" />
	            AND (M.`name` LIKE #{keyword} OR M.`compName` LIKE #{keyword} OR M.`id` LIKE #{keyword})
            </if>
	    </where>
		
   	</select>
   	
   	<!-- 정산정보 추가 -->
   	<insert id="insCalculations" parameterType="java.util.Map">
		INSERT INTO calculations 
			(id, 
			uciCode, 
			`usage`, 
			`type`, 
			`payType`, 
			`price`, 
			`fees`, 
			`rate`, 
			`status`, 
			regDate) 
		VALUES 
			(#{id},
			#{uciCode},
			#{usage},
			#{type},
			#{payType},
			#{price},
			#{fees},
			#{rate},
			0,
			#{regDate}
			)
	</insert>
	
	<!-- 판매수금 보고서 리턴 타입 -->
   	<resultMap id="calculationReportResult" type="com.dahami.newsbank.web.dto.CalculationDTO">
		<id property="seq" column="seq" />
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="compName" column="compName" />
		<result property="descriptionKr" column="descriptionKr" />
		<result property="descriptionEn" column="descriptionEn" />
		<result property="shotPerson" column="shotPerson" />
		<result property="regDate" column="regDate" />
		<result property="uciCode" column="uciCode" />
		<result property="price" column="price" />
		<result property="type" column="type" />
		
		<association property="memberDTO" column="compAddress"
			javaType="com.dahami.newsbank.web.dto.MemberDTO" resultMap="memberResult" />
		<association property="usageDTO" column="usage"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />
		<association property="usageDTO" column="division1"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />
		<association property="usageDTO" column="division2"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />
		<association property="usageDTO" column="division3"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />
		<association property="usageDTO" column="division4"
			javaType="com.dahami.newsbank.web.dto.UsageDTO" resultMap="usageResult" />															
	</resultMap>	
	
	<!-- 판매수금 보고서 -->
	<select id="selectCalculationReport" resultMap="calculationReportResult" 
   	    parameterType="com.dahami.newsbank.web.dto.CalculationDTO"> 
   	   	SELECT M.`id`, M.`name`, M.`compName`, M.`compAddress`, P.`descriptionKr`, P.descriptionEn, P.`shotPerson`
		, C.`regDate`, U.`usage` AS usageName, U.division1, U.division2, U.division3, U.division4, C.uciCode, C.price, C.`type`
		FROM calculations C
		LEFT JOIN photo P ON C.`uciCode` = P.`uciCode`
		LEFT JOIN usageList U ON C.`usage`= U.`seq`
		LEFT JOIN member M on C.`id` = M.`id`
		
		<where>
			AND P.member_seq IN ('999')
		    <if test="payType != null and payType != 'all'">
		    	AND C.`type` = #{payType}    
		    </if>		    
		    <if test="start_date != null and end_date != null">
		    	AND date_format(C.`regDate`, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}     
		    </if>
		    <if test="keyword != null and keyword != ''">
		    	<if test="keywordType == 'member'"> <!-- 회사/기관명, 아이디, 이름 -->
				 AND M.id LIKE CONCAT('%', #{keyword}, '%')
				     OR M.name LIKE CONCAT('%', #{keyword}, '%')
				     OR M.compName LIKE CONCAT('%', #{keyword}, '%')
				</if>
				<if test="keywordType == 'photo'"> <!-- UCI코드, 언론사 사진번호 -->
				 AND P.uciCode LIKE CONCAT('%', #{keyword}, '%')
				    OR (SELECT compCode FROM photo WHERE uciCode = C.uciCode) LIKE CONCAT('%', #{keyword}, '%')
				</if>
	            <bind name="keyword" value="'%' + keyword + '%'" />
	            AND (M.`name` LIKE #{keyword} OR M.`compName` LIKE #{keyword} OR M.`id` LIKE #{keyword})
            </if>
            AND C.price >= 67780
	    </where>
		ORDER BY C.`regDate` DESC
   	</select>	
</mapper>
    